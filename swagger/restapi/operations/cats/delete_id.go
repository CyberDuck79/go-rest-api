// Code generated by go-swagger; DO NOT EDIT.

package cats

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteIDHandlerFunc turns a function with the right signature into a delete ID handler
type DeleteIDHandlerFunc func(DeleteIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteIDHandlerFunc) Handle(params DeleteIDParams) middleware.Responder {
	return fn(params)
}

// DeleteIDHandler interface for that can handle valid delete ID params
type DeleteIDHandler interface {
	Handle(DeleteIDParams) middleware.Responder
}

// NewDeleteID creates a new http.Handler for the delete ID operation
func NewDeleteID(ctx *middleware.Context, handler DeleteIDHandler) *DeleteID {
	return &DeleteID{Context: ctx, Handler: handler}
}

/* DeleteID swagger:route DELETE /{id} cats deleteId

Delete a cat by id

*/
type DeleteID struct {
	Context *middleware.Context
	Handler DeleteIDHandler
}

func (o *DeleteID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
