// Code generated by go-swagger; DO NOT EDIT.

package cats

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"rest_api/swagger/models"
)

// PutIDOKCode is the HTTP code returned for type PutIDOK
const PutIDOKCode int = 200

/*PutIDOK Cat modified

swagger:response putIdOK
*/
type PutIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Cat `json:"body,omitempty"`
}

// NewPutIDOK creates PutIDOK with default headers values
func NewPutIDOK() *PutIDOK {

	return &PutIDOK{}
}

// WithPayload adds the payload to the put Id o k response
func (o *PutIDOK) WithPayload(payload *models.Cat) *PutIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put Id o k response
func (o *PutIDOK) SetPayload(payload *models.Cat) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutIDBadRequestCode is the HTTP code returned for type PutIDBadRequest
const PutIDBadRequestCode int = 400

/*PutIDBadRequest bad request

swagger:response putIdBadRequest
*/
type PutIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPutIDBadRequest creates PutIDBadRequest with default headers values
func NewPutIDBadRequest() *PutIDBadRequest {

	return &PutIDBadRequest{}
}

// WithPayload adds the payload to the put Id bad request response
func (o *PutIDBadRequest) WithPayload(payload models.Error) *PutIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put Id bad request response
func (o *PutIDBadRequest) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PutIDNotFoundCode is the HTTP code returned for type PutIDNotFound
const PutIDNotFoundCode int = 404

/*PutIDNotFound not found

swagger:response putIdNotFound
*/
type PutIDNotFound struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPutIDNotFound creates PutIDNotFound with default headers values
func NewPutIDNotFound() *PutIDNotFound {

	return &PutIDNotFound{}
}

// WithPayload adds the payload to the put Id not found response
func (o *PutIDNotFound) WithPayload(payload models.Error) *PutIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put Id not found response
func (o *PutIDNotFound) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PutIDInternalServerErrorCode is the HTTP code returned for type PutIDInternalServerError
const PutIDInternalServerErrorCode int = 500

/*PutIDInternalServerError internal error

swagger:response putIdInternalServerError
*/
type PutIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPutIDInternalServerError creates PutIDInternalServerError with default headers values
func NewPutIDInternalServerError() *PutIDInternalServerError {

	return &PutIDInternalServerError{}
}

// WithPayload adds the payload to the put Id internal server error response
func (o *PutIDInternalServerError) WithPayload(payload models.Error) *PutIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put Id internal server error response
func (o *PutIDInternalServerError) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
